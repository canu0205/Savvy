{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200115e3803806200115e833981016040819052620000349162000137565b8181600262000044838262000257565b50600362000053828262000257565b50506000805550600862000068848262000257565b5050505062000323565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009a57600080fd5b81516001600160401b0380821115620000b757620000b762000072565b604051601f8301601f19908116603f01168101908282118183101715620000e257620000e262000072565b81604052838152602092508683858801011115620000ff57600080fd5b600091505b8382101562000123578582018301518183018401529082019062000104565b600093810190920192909252949350505050565b6000806000606084860312156200014d57600080fd5b83516001600160401b03808211156200016557600080fd5b620001738783880162000088565b945060208601519150808211156200018a57600080fd5b620001988783880162000088565b93506040860151915080821115620001af57600080fd5b50620001be8682870162000088565b9150509250925092565b600181811c90821680620001dd57607f821691505b602082108103620001fe57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025257600081815260208120601f850160051c810160208610156200022d5750805b601f850160051c820191505b818110156200024e5782815560010162000239565b5050505b505050565b81516001600160401b0381111562000273576200027362000072565b6200028b81620002848454620001c8565b8462000204565b602080601f831160018114620002c35760008415620002aa5750858301515b600019600386901b1c1916600185901b1785556200024e565b600085815260208120601f198616915b82811015620002f457888601518255948401946001909101908401620002d3565b5085821015620003135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e2b80620003336000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb4651461024f578063b88d4fde1461026f578063c87b56dd14610282578063e985e9c5146102a257600080fd5b80636352211e146101da57806370a08231146101fa57806395d89b411461021a578063a0712d681461022f57600080fd5b8063095ea7b3116100c6578063095ea7b31461017c57806318160ddd1461019157806323b872dd146101b457806342842e0e146101c757600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004610aae565b6102eb565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061013761033d565b6040516101199190610b1b565b34801561015057600080fd5b5061016461015f366004610b2e565b6103cf565b6040516001600160a01b039091168152602001610119565b61018f61018a366004610b63565b610413565b005b34801561019d57600080fd5b50600154600054035b604051908152602001610119565b61018f6101c2366004610b8d565b6104b3565b61018f6101d5366004610b8d565b61064b565b3480156101e657600080fd5b506101646101f5366004610b2e565b61066b565b34801561020657600080fd5b506101a6610215366004610bc9565b610676565b34801561022657600080fd5b506101376106c5565b34801561023b57600080fd5b5061018f61024a366004610b2e565b6106d4565b34801561025b57600080fd5b5061018f61026a366004610be4565b6106e1565b61018f61027d366004610c36565b61074d565b34801561028e57600080fd5b5061013761029d366004610b2e565b610797565b3480156102ae57600080fd5b5061010d6102bd366004610d12565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061031c57506380ac58cd60e01b6001600160e01b03198316145b806103375750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461034c90610d45565b80601f016020809104026020016040519081016040528092919081815260200182805461037890610d45565b80156103c55780601f1061039a576101008083540402835291602001916103c5565b820191906000526020600020905b8154815290600101906020018083116103a857829003601f168201915b5050505050905090565b60006103da82610808565b6103f7576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061041e8261066b565b9050336001600160a01b038216146104575761043a81336102bd565b610457576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006104be8261082f565b9050836001600160a01b0316816001600160a01b0316146104f15760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761053e5761052186336102bd565b61053e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661056557604051633a954ecd60e21b815260040160405180910390fd5b801561057057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610602576001840160008181526004602052604081205490036106005760005481146106005760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6106668383836040518060200160405280600081525061074d565b505050565b60006103378261082f565b60006001600160a01b03821661069f576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461034c90610d45565b6106de3382610896565b50565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6107588484846104b3565b6001600160a01b0383163b156107915761077484848484610994565b610791576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606107a282610808565b6107b6576107b6630a14c4b560e41b610a7f565b60006107c0610a89565b905080516000036107e05760405180602001604052806000815250610801565b806040516020016107f19190610d7f565b6040516020818303038152906040525b9392505050565b6000805482108015610337575050600090815260046020526040902054600160e01b161590565b60008160005481101561087d5760008181526004602052604081205490600160e01b8216900361087b575b8060000361080157506000190160008181526004602052604090205461085a565b505b604051636f96cda160e11b815260040160405180910390fd5b60008054908290036108bb5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461096a57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610932565b508160000361098b57604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906109c9903390899088908890600401610d9b565b6020604051808303816000875af1925050508015610a04575060408051601f3d908101601f19168201909252610a0191810190610dd8565b60015b610a62573d808015610a32576040519150601f19603f3d011682016040523d82523d6000602084013e610a37565b606091505b508051600003610a5a576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b8060005260046000fd5b60606008805461034c90610d45565b6001600160e01b0319811681146106de57600080fd5b600060208284031215610ac057600080fd5b813561080181610a98565b60005b83811015610ae6578181015183820152602001610ace565b50506000910152565b60008151808452610b07816020860160208601610acb565b601f01601f19169290920160200192915050565b6020815260006108016020830184610aef565b600060208284031215610b4057600080fd5b5035919050565b80356001600160a01b0381168114610b5e57600080fd5b919050565b60008060408385031215610b7657600080fd5b610b7f83610b47565b946020939093013593505050565b600080600060608486031215610ba257600080fd5b610bab84610b47565b9250610bb960208501610b47565b9150604084013590509250925092565b600060208284031215610bdb57600080fd5b61080182610b47565b60008060408385031215610bf757600080fd5b610c0083610b47565b915060208301358015158114610c1557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610c4c57600080fd5b610c5585610b47565b9350610c6360208601610b47565b925060408501359150606085013567ffffffffffffffff80821115610c8757600080fd5b818701915087601f830112610c9b57600080fd5b813581811115610cad57610cad610c20565b604051601f8201601f19908116603f01168101908382118183101715610cd557610cd5610c20565b816040528281528a6020848701011115610cee57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610d2557600080fd5b610d2e83610b47565b9150610d3c60208401610b47565b90509250929050565b600181811c90821680610d5957607f821691505b602082108103610d7957634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610d91818460208701610acb565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610dce90830184610aef565b9695505050505050565b600060208284031215610dea57600080fd5b815161080181610a9856fea2646970667358221220a4bad26a25a63f8fcc6bd88d36289e5dd19941ee0b77535e8a04dfe879ceac8264736f6c63430008140033",
    "sourceMap": "98:952:2:-:0;;;166:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;284:5;291:7;5012:5:0;:13;284:5:2;5012::0;:13;:::i;:::-;-1:-1:-1;5035:7:0;:17;5045:7;5035;:17;:::i;:::-;-1:-1:-1;;5482:7:0;5062:31;;-1:-1:-1;310:13:2::1;:24;326:8:::0;310:13;:24:::1;:::i;:::-;;166:175:::0;;;98:952;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:3;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:3;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:3:o;991:766::-;1109:6;1117;1125;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;1221:16;;-1:-1:-1;;;;;1286:14:3;;;1283:34;;;1313:1;1310;1303:12;1283:34;1336:61;1389:7;1380:6;1369:9;1365:22;1336:61;:::i;:::-;1326:71;;1443:2;1432:9;1428:18;1422:25;1406:41;;1472:2;1462:8;1459:16;1456:36;;;1488:1;1485;1478:12;1456:36;1511:63;1566:7;1555:8;1544:9;1540:24;1511:63;:::i;:::-;1501:73;;1620:2;1609:9;1605:18;1599:25;1583:41;;1649:2;1639:8;1636:16;1633:36;;;1665:1;1662;1655:12;1633:36;;1688:63;1743:7;1732:8;1721:9;1717:24;1688:63;:::i;:::-;1678:73;;;991:766;;;;;:::o;1762:380::-;1841:1;1837:12;;;;1884;;;1905:61;;1959:4;1951:6;1947:17;1937:27;;1905:61;2012:2;2004:6;2001:14;1981:18;1978:38;1975:161;;2058:10;2053:3;2049:20;2046:1;2039:31;2093:4;2090:1;2083:15;2121:4;2118:1;2111:15;1975:161;;1762:380;;;:::o;2273:545::-;2375:2;2370:3;2367:11;2364:448;;;2411:1;2436:5;2432:2;2425:17;2481:4;2477:2;2467:19;2551:2;2539:10;2535:19;2532:1;2528:27;2522:4;2518:38;2587:4;2575:10;2572:20;2569:47;;;-1:-1:-1;2610:4:3;2569:47;2665:2;2660:3;2656:12;2653:1;2649:20;2643:4;2639:31;2629:41;;2720:82;2738:2;2731:5;2728:13;2720:82;;;2783:17;;;2764:1;2753:13;2720:82;;;2724:3;;;2364:448;2273:545;;;:::o;2994:1352::-;3114:10;;-1:-1:-1;;;;;3136:30:3;;3133:56;;;3169:18;;:::i;:::-;3198:97;3288:6;3248:38;3280:4;3274:11;3248:38;:::i;:::-;3242:4;3198:97;:::i;:::-;3350:4;;3414:2;3403:14;;3431:1;3426:663;;;;4133:1;4150:6;4147:89;;;-1:-1:-1;4202:19:3;;;4196:26;4147:89;-1:-1:-1;;2951:1:3;2947:11;;;2943:24;2939:29;2929:40;2975:1;2971:11;;;2926:57;4249:81;;3396:944;;3426:663;2220:1;2213:14;;;2257:4;2244:18;;-1:-1:-1;;3462:20:3;;;3580:236;3594:7;3591:1;3588:14;3580:236;;;3683:19;;;3677:26;3662:42;;3775:27;;;;3743:1;3731:14;;;;3610:19;;3580:236;;;3584:3;3844:6;3835:7;3832:19;3829:201;;;3905:19;;;3899:26;-1:-1:-1;;3988:1:3;3984:14;;;4000:3;3980:24;3976:37;3972:42;3957:58;3942:74;;3829:201;-1:-1:-1;;;;;4076:1:3;4060:14;;;4056:22;4043:36;;-1:-1:-1;2994:1352:3:o;:::-;98:952:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb4651461024f578063b88d4fde1461026f578063c87b56dd14610282578063e985e9c5146102a257600080fd5b80636352211e146101da57806370a08231146101fa57806395d89b411461021a578063a0712d681461022f57600080fd5b8063095ea7b3116100c6578063095ea7b31461017c57806318160ddd1461019157806323b872dd146101b457806342842e0e146101c757600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004610aae565b6102eb565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061013761033d565b6040516101199190610b1b565b34801561015057600080fd5b5061016461015f366004610b2e565b6103cf565b6040516001600160a01b039091168152602001610119565b61018f61018a366004610b63565b610413565b005b34801561019d57600080fd5b50600154600054035b604051908152602001610119565b61018f6101c2366004610b8d565b6104b3565b61018f6101d5366004610b8d565b61064b565b3480156101e657600080fd5b506101646101f5366004610b2e565b61066b565b34801561020657600080fd5b506101a6610215366004610bc9565b610676565b34801561022657600080fd5b506101376106c5565b34801561023b57600080fd5b5061018f61024a366004610b2e565b6106d4565b34801561025b57600080fd5b5061018f61026a366004610be4565b6106e1565b61018f61027d366004610c36565b61074d565b34801561028e57600080fd5b5061013761029d366004610b2e565b610797565b3480156102ae57600080fd5b5061010d6102bd366004610d12565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061031c57506380ac58cd60e01b6001600160e01b03198316145b806103375750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461034c90610d45565b80601f016020809104026020016040519081016040528092919081815260200182805461037890610d45565b80156103c55780601f1061039a576101008083540402835291602001916103c5565b820191906000526020600020905b8154815290600101906020018083116103a857829003601f168201915b5050505050905090565b60006103da82610808565b6103f7576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061041e8261066b565b9050336001600160a01b038216146104575761043a81336102bd565b610457576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006104be8261082f565b9050836001600160a01b0316816001600160a01b0316146104f15760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761053e5761052186336102bd565b61053e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661056557604051633a954ecd60e21b815260040160405180910390fd5b801561057057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610602576001840160008181526004602052604081205490036106005760005481146106005760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6106668383836040518060200160405280600081525061074d565b505050565b60006103378261082f565b60006001600160a01b03821661069f576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461034c90610d45565b6106de3382610896565b50565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6107588484846104b3565b6001600160a01b0383163b156107915761077484848484610994565b610791576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606107a282610808565b6107b6576107b6630a14c4b560e41b610a7f565b60006107c0610a89565b905080516000036107e05760405180602001604052806000815250610801565b806040516020016107f19190610d7f565b6040516020818303038152906040525b9392505050565b6000805482108015610337575050600090815260046020526040902054600160e01b161590565b60008160005481101561087d5760008181526004602052604081205490600160e01b8216900361087b575b8060000361080157506000190160008181526004602052604090205461085a565b505b604051636f96cda160e11b815260040160405180910390fd5b60008054908290036108bb5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461096a57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610932565b508160000361098b57604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906109c9903390899088908890600401610d9b565b6020604051808303816000875af1925050508015610a04575060408051601f3d908101601f19168201909252610a0191810190610dd8565b60015b610a62573d808015610a32576040519150601f19603f3d011682016040523d82523d6000602084013e610a37565b606091505b508051600003610a5a576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b8060005260046000fd5b60606008805461034c90610d45565b6001600160e01b0319811681146106de57600080fd5b600060208284031215610ac057600080fd5b813561080181610a98565b60005b83811015610ae6578181015183820152602001610ace565b50506000910152565b60008151808452610b07816020860160208601610acb565b601f01601f19169290920160200192915050565b6020815260006108016020830184610aef565b600060208284031215610b4057600080fd5b5035919050565b80356001600160a01b0381168114610b5e57600080fd5b919050565b60008060408385031215610b7657600080fd5b610b7f83610b47565b946020939093013593505050565b600080600060608486031215610ba257600080fd5b610bab84610b47565b9250610bb960208501610b47565b9150604084013590509250925092565b600060208284031215610bdb57600080fd5b61080182610b47565b60008060408385031215610bf757600080fd5b610c0083610b47565b915060208301358015158114610c1557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610c4c57600080fd5b610c5585610b47565b9350610c6360208601610b47565b925060408501359150606085013567ffffffffffffffff80821115610c8757600080fd5b818701915087601f830112610c9b57600080fd5b813581811115610cad57610cad610c20565b604051601f8201601f19908116603f01168101908382118183101715610cd557610cd5610c20565b816040528281528a6020848701011115610cee57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610d2557600080fd5b610d2e83610b47565b9150610d3c60208401610b47565b90509250929050565b600181811c90821680610d5957607f821691505b602082108103610d7957634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610d91818460208701610acb565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610dce90830184610aef565b9695505050505050565b600060208284031215610dea57600080fd5b815161080181610a9856fea2646970667358221220a4bad26a25a63f8fcc6bd88d36289e5dd19941ee0b77535e8a04dfe879ceac8264736f6c63430008140033",
    "sourceMap": "98:952:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9155:630:0;;;;;;;;;;-1:-1:-1;9155:630:0;;;;;:::i;:::-;;:::i;:::-;;;565:14:3;;558:22;540:41;;528:2;513:18;9155:630:0;;;;;;;;10039:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16360:214::-;;;;;;;;;;-1:-1:-1;16360:214:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:3;;;1679:51;;1667:2;1652:18;16360:214:0;1533:203:3;15812:398:0;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;-1:-1:-1;6164:12:0;;5955:7;6148:13;:28;5894:317;;;2324:25:3;;;2312:2;2297:18;5894:317:0;2178:177:3;19903:2764:0;;;;;;:::i;:::-;;:::i;22758:187::-;;;;;;:::i;:::-;;:::i;11391:150::-;;;;;;;;;;-1:-1:-1;11391:150:0;;;;;:::i;:::-;;:::i;7045:230::-;;;;;;;;;;-1:-1:-1;7045:230:0;;;;;:::i;:::-;;:::i;10208:102::-;;;;;;;;;;;;;:::i;347:83:2:-;;;;;;;;;;-1:-1:-1;347:83:2;;;;;:::i;:::-;;:::i;16901:231:0:-;;;;;;;;;;-1:-1:-1;16901:231:0;;;;;:::i;:::-;;:::i;23526:396::-;;;;;;:::i;:::-;;:::i;436:328:2:-;;;;;;;;;;-1:-1:-1;436:328:2;;;;;:::i;:::-;;:::i;17282:162:0:-;;;;;;;;;;-1:-1:-1;17282:162:0;;;;;:::i;:::-;-1:-1:-1;;;;;17402:25:0;;;17379:4;17402:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17282:162;9155:630;9240:4;-1:-1:-1;;;;;;;;;9558:25:0;;;;:101;;-1:-1:-1;;;;;;;;;;9634:25:0;;;9558:101;:177;;;-1:-1:-1;;;;;;;;;;9710:25:0;;;9558:177;9539:196;9155:630;-1:-1:-1;;9155:630:0:o;10039:98::-;10093:13;10125:5;10118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:98;:::o;16360:214::-;16436:7;16460:16;16468:7;16460;:16::i;:::-;16455:64;;16485:34;;-1:-1:-1;;;16485:34:0;;;;;;;;;;;16455:64;-1:-1:-1;16537:24:0;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16537:30:0;;16360:214::o;15812:398::-;15900:13;15916:16;15924:7;15916;:16::i;:::-;15900:32;-1:-1:-1;39523:10:0;-1:-1:-1;;;;;15947:28:0;;;15943:172;;15994:44;16011:5;39523:10;17282:162;:::i;15994:44::-;15989:126;;16065:35;;-1:-1:-1;;;16065:35:0;;;;;;;;;;;15989:126;16125:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16125:35:0;-1:-1:-1;;;;;16125:35:0;;;;;;;;;16175:28;;16125:24;;16175:28;;;;;;;15890:320;15812:398;;:::o;19903:2764::-;20040:27;20070;20089:7;20070:18;:27::i;:::-;20040:57;;20153:4;-1:-1:-1;;;;;20112:45:0;20128:19;-1:-1:-1;;;;;20112:45:0;;20108:86;;20166:28;;-1:-1:-1;;;20166:28:0;;;;;;;;;;;20108:86;20206:27;19036:24;;;:15;:24;;;;;19260:26;;39523:10;18673:30;;;-1:-1:-1;;;;;18370:28:0;;18651:20;;;18648:56;20389:179;;20481:43;20498:4;39523:10;17282:162;:::i;20481:43::-;20476:92;;20533:35;;-1:-1:-1;;;20533:35:0;;;;;;;;;;;20476:92;-1:-1:-1;;;;;20583:16:0;;20579:52;;20608:23;;-1:-1:-1;;;20608:23:0;;;;;;;;;;;20579:52;20774:15;20771:157;;;20912:1;20891:19;20884:30;20771:157;-1:-1:-1;;;;;21300:24:0;;;;;;;:18;:24;;;;;;21298:26;;-1:-1:-1;;21298:26:0;;;21368:22;;;;;;;;;21366:24;;-1:-1:-1;21366:24:0;;;14703:11;14678:23;14674:41;14661:63;-1:-1:-1;;;14661:63:0;21654:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;21943:47:0;;:52;;21939:617;;22047:1;22037:11;;22015:19;22168:30;;;:17;:30;;;;;;:35;;22164:378;;22304:13;;22289:11;:28;22285:239;;22449:30;;;;:17;:30;;;;;:52;;;22285:239;21997:559;21939:617;22600:7;22596:2;-1:-1:-1;;;;;22581:27:0;22590:4;-1:-1:-1;;;;;22581:27:0;;;;;;;;;;;20030:2637;;;19903:2764;;;:::o;22758:187::-;22899:39;22916:4;22922:2;22926:7;22899:39;;;;;;;;;;;;:16;:39::i;:::-;22758:187;;;:::o;11391:150::-;11463:7;11505:27;11524:7;11505:18;:27::i;7045:230::-;7117:7;-1:-1:-1;;;;;7140:19:0;;7136:60;;7168:28;;-1:-1:-1;;;7168:28:0;;;;;;;;;;;7136:60;-1:-1:-1;;;;;;7213:25:0;;;;;:18;:25;;;;;;1360:13;7213:55;;7045:230::o;10208:102::-;10264:13;10296:7;10289:14;;;;;:::i;347:83:2:-;396:27;402:10;414:8;396:5;:27::i;:::-;347:83;:::o;16901:231:0:-;39523:10;16995:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;16995:49:0;;;;;;;;;;;;:60;;-1:-1:-1;;16995:60:0;;;;;;;;;;17070:55;;540:41:3;;;16995:49:0;;39523:10;17070:55;;513:18:3;17070:55:0;;;;;;;16901:231;;:::o;23526:396::-;23695:31;23708:4;23714:2;23718:7;23695:12;:31::i;:::-;-1:-1:-1;;;;;23740:14:0;;;:19;23736:180;;23778:56;23809:4;23815:2;23819:7;23828:5;23778:30;:56::i;:::-;23773:143;;23861:40;;-1:-1:-1;;;23861:40:0;;;;;;;;;;;23773:143;23526:396;;;;:::o;436:328:2:-;523:13;553:16;561:7;553;:16::i;:::-;548:68;;571:45;-1:-1:-1;;;571:7:2;:45::i;:::-;627:21;651:10;:8;:10::i;:::-;627:34;;696:7;690:21;715:1;690:26;:67;;;;;;;;;;;;;;;;;743:7;726:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;690:67;671:86;436:328;-1:-1:-1;;;436:328:2:o;17693:277:0:-;17758:4;17845:13;;17835:7;:23;17793:151;;;;-1:-1:-1;;17895:26:0;;;;:17;:26;;;;;;-1:-1:-1;;;17895:44:0;:49;;17693:277::o;12515:1249::-;12582:7;12616;12714:13;;12707:4;:20;12703:997;;;12751:14;12768:23;;;:17;:23;;;;;;;-1:-1:-1;;;12855:24:0;;:29;;12851:831;;13510:111;13517:6;13527:1;13517:11;13510:111;;-1:-1:-1;;;13587:6:0;13569:25;;;;:17;:25;;;;;;13510:111;;12851:831;12729:971;12703:997;13726:31;;-1:-1:-1;;;13726:31:0;;;;;;;;;;;27091:2902;27163:20;27186:13;;;27213;;;27209:44;;27235:18;;-1:-1:-1;;;27235:18:0;;;;;;;;;;;27209:44;-1:-1:-1;;;;;27728:22:0;;;;;;:18;:22;;;;1495:2;27728:22;;;:71;;27766:32;27754:45;;27728:71;;;28035:31;;;:17;:31;;;;;-1:-1:-1;15123:15:0;;15097:24;15093:46;14703:11;14678:23;14674:41;14671:52;14661:63;;28035:170;;28264:23;;;;28035:31;;27728:22;;29016:25;27728:22;;28872:328;29520:1;29506:12;29502:20;29461:339;29560:3;29551:7;29548:16;29461:339;;29774:7;29764:8;29761:1;29734:25;29731:1;29728;29723:59;29612:1;29599:15;29461:339;;;29465:75;29831:8;29843:1;29831:13;29827:45;;29853:19;;-1:-1:-1;;;29853:19:0;;;;;;;;;;;29827:45;29887:13;:19;-1:-1:-1;22758:187:0;;;:::o;25948:697::-;26126:88;;-1:-1:-1;;;26126:88:0;;26106:4;;-1:-1:-1;;;;;26126:45:0;;;;;:88;;39523:10;;26193:4;;26199:7;;26208:5;;26126:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26126:88:0;;;;;;;;-1:-1:-1;;26126:88:0;;;;;;;;;;;;:::i;:::-;;;26122:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26404:6;:13;26421:1;26404:18;26400:229;;26449:40;;-1:-1:-1;;;26449:40:0;;;;;;;;;;;26400:229;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;26122:517;-1:-1:-1;;;;;;26282:64:0;-1:-1:-1;;;26282:64:0;;-1:-1:-1;25948:697:0;;;;;;:::o;888:160:2:-;987:13;981:4;974:27;1027:4;1021;1014:18;770:112;830:13;862;855:20;;;;;:::i;14:131:3:-;-1:-1:-1;;;;;;88:32:3;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:3;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:3;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:3:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:3;;1348:180;-1:-1:-1;1348:180:3:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:3;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:3:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:3;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5161:289::-;5292:3;5330:6;5324:13;5346:66;5405:6;5400:3;5393:4;5385:6;5381:17;5346:66;:::i;:::-;5428:16;;;;;5161:289;-1:-1:-1;;5161:289:3:o;5455:489::-;-1:-1:-1;;;;;5724:15:3;;;5706:34;;5776:15;;5771:2;5756:18;;5749:43;5823:2;5808:18;;5801:34;;;5871:3;5866:2;5851:18;;5844:31;;;5649:4;;5892:46;;5918:19;;5910:6;5892:46;:::i;:::-;5884:54;5455:489;-1:-1:-1;;;;;;5455:489:3:o;5949:249::-;6018:6;6071:2;6059:9;6050:7;6046:23;6042:32;6039:52;;;6087:1;6084;6077:12;6039:52;6119:9;6113:16;6138:30;6162:5;6138:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Ticket.sol\":\"Ticket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/ERC721A/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"lib/ERC721A/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"src/Ticket.sol\":{\"keccak256\":\"0x3ae3cf48faa9265999d00aa37f4c2832da38f4cef17f6654ce81dcc44ea9b72e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e59cbf2849ee96f4c1a9a196c52485049b9b16ccc002cb7ccc0c6fac5df5fc\",\"dweb:/ipfs/QmYLbbe3K1PctQodGDRhL44hNmUpGp86XfiQf6PV3BTZAb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ERC721A/=lib/ERC721A/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":erc721a/=lib/ERC721A/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Ticket.sol": "Ticket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ERC721A/contracts/ERC721A.sol": {
        "keccak256": "0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c",
        "urls": [
          "bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809",
          "dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy"
        ],
        "license": "MIT"
      },
      "lib/ERC721A/contracts/IERC721A.sol": {
        "keccak256": "0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad",
        "urls": [
          "bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9",
          "dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz"
        ],
        "license": "MIT"
      },
      "src/Ticket.sol": {
        "keccak256": "0x3ae3cf48faa9265999d00aa37f4c2832da38f4cef17f6654ce81dcc44ea9b72e",
        "urls": [
          "bzz-raw://46e59cbf2849ee96f4c1a9a196c52485049b9b16ccc002cb7ccc0c6fac5df5fc",
          "dweb:/ipfs/QmYLbbe3K1PctQodGDRhL44hNmUpGp86XfiQf6PV3BTZAb"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Ticket.sol",
    "id": 1924,
    "exportedSymbols": {
      "ERC721A": [
        1622
      ],
      "ERC721A__IERC721Receiver": [
        17
      ],
      "IERC721A": [
        1828
      ],
      "Ticket": [
        1923
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1019:2",
    "nodes": [
      {
        "id": 1830,
        "nodeType": "PragmaDirective",
        "src": "32:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1831,
        "nodeType": "ImportDirective",
        "src": "57:39:2",
        "nodes": [],
        "absolutePath": "lib/ERC721A/contracts/ERC721A.sol",
        "file": "erc721a/contracts/ERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1924,
        "sourceUnit": 1623,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1923,
        "nodeType": "ContractDefinition",
        "src": "98:952:2",
        "nodes": [
          {
            "id": 1835,
            "nodeType": "VariableDeclaration",
            "src": "131:28:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_baseTokenURI",
            "nameLocation": "146:13:2",
            "scope": 1923,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1834,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "131:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 1853,
            "nodeType": "FunctionDefinition",
            "src": "166:175:2",
            "nodes": [],
            "body": {
              "id": 1852,
              "nodeType": "Block",
              "src": "300:41:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1848,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1835,
                      "src": "310:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1849,
                      "name": "baseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "326:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "310:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1851,
                  "nodeType": "ExpressionStatement",
                  "src": "310:24:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1844,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1839,
                    "src": "284:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1845,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1841,
                    "src": "291:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1846,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1843,
                  "name": "ERC721A",
                  "nameLocations": [
                    "276:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1622,
                  "src": "276:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "276:23:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1837,
                  "mutability": "mutable",
                  "name": "baseURI_",
                  "nameLocation": "201:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1853,
                  "src": "187:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1839,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "233:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1853,
                  "src": "219:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1841,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "262:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1853,
                  "src": "248:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "177:98:2"
            },
            "returnParameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:0:2"
            },
            "scope": 1923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1865,
            "nodeType": "FunctionDefinition",
            "src": "347:83:2",
            "nodes": [],
            "body": {
              "id": 1864,
              "nodeType": "Block",
              "src": "386:44:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1859,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "402:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "406:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "402:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1861,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "414:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1858,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1158,
                      "src": "396:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "396:27:2"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "356:4:2",
            "parameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "369:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1865,
                  "src": "361:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "360:18:2"
            },
            "returnParameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:0:2"
            },
            "scope": 1923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1906,
            "nodeType": "FunctionDefinition",
            "src": "436:328:2",
            "nodes": [],
            "body": {
              "id": 1905,
              "nodeType": "Block",
              "src": "538:226:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "552:17:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1874,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1867,
                          "src": "561:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1873,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "553:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 1875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "553:16:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1882,
                  "nodeType": "IfStatement",
                  "src": "548:68:2",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1878,
                            "name": "URIQueryForNonexistentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "579:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "607:8:2",
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "579:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 1877,
                        "name": "_revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1922,
                        "src": "571:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
                          "typeString": "function (bytes4) pure"
                        }
                      },
                      "id": 1880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "571:45:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1881,
                    "nodeType": "ExpressionStatement",
                    "src": "571:45:2"
                  }
                },
                {
                  "assignments": [
                    1884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1884,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "641:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1905,
                      "src": "627:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1883,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "627:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1887,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1885,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1915
                      ],
                      "referencedDeclaration": 1915,
                      "src": "651:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "627:34:2"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1890,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "696:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "690:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1888,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "690:5:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "690:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "705:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "690:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "690:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "755:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "690:67:2",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1899,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "743:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1897,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "726:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "730:12:2",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "726:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "726:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "719:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1895,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "719:6:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "719:33:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1872,
                  "id": 1904,
                  "nodeType": "Return",
                  "src": "671:86:2"
                }
              ]
            },
            "baseFunctions": [
              395
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "445:8:2",
            "overrides": {
              "id": 1869,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "505:8:2"
            },
            "parameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "471:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "463:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:31:2"
            },
            "returnParameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "523:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:15:2"
            },
            "scope": 1923,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1915,
            "nodeType": "FunctionDefinition",
            "src": "770:112:2",
            "nodes": [],
            "body": {
              "id": 1914,
              "nodeType": "Block",
              "src": "845:37:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1912,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1835,
                    "src": "862:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1911,
                  "id": 1913,
                  "nodeType": "Return",
                  "src": "855:20:2"
                }
              ]
            },
            "baseFunctions": [
              404
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "779:8:2",
            "overrides": {
              "id": 1908,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "812:8:2"
            },
            "parameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "787:2:2"
            },
            "returnParameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1915,
                  "src": "830:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "829:15:2"
            },
            "scope": 1923,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 1922,
            "nodeType": "FunctionDefinition",
            "src": "888:160:2",
            "nodes": [],
            "body": {
              "id": 1921,
              "nodeType": "Block",
              "src": "941:107:2",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "960:82:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "981:4:2",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "name": "errorSelector",
                              "nodeType": "YulIdentifier",
                              "src": "987:13:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "974:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "974:27:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "974:27:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1021:4:2",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1027:4:2",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1014:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1014:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1014:18:2"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 1917,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "987:13:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 1920,
                  "nodeType": "InlineAssembly",
                  "src": "951:91:2"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_revert",
            "nameLocation": "897:7:2",
            "parameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1917,
                  "mutability": "mutable",
                  "name": "errorSelector",
                  "nameLocation": "912:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1922,
                  "src": "905:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1916,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:22:2"
            },
            "returnParameters": {
              "id": 1919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "941:0:2"
            },
            "scope": 1923,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1832,
              "name": "ERC721A",
              "nameLocations": [
                "117:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1622,
              "src": "117:7:2"
            },
            "id": 1833,
            "nodeType": "InheritanceSpecifier",
            "src": "117:7:2"
          }
        ],
        "canonicalName": "Ticket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1923,
          1622,
          1828
        ],
        "name": "Ticket",
        "nameLocation": "107:6:2",
        "scope": 1924,
        "usedErrors": [
          1628,
          1631,
          1634,
          1637,
          1640,
          1643,
          1646,
          1649,
          1652,
          1655,
          1658,
          1661,
          1664
        ],
        "usedEvents": [
          1696,
          1705,
          1714,
          1827
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 2
}